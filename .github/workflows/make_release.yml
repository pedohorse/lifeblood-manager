on:
  push:
    tags: [ "*" ]

name: CI

jobs:
  tests:
    uses: ./.github/workflows/test.yml

  build:
    needs: [ "tests" ]
    name: build ${{ matrix.runon }}
    runs-on: ${{ matrix.runon }}

    strategy:
      matrix:
        runon:
          - "ubuntu-latest"
          - "windows-latest"
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - name: get deps
        if: ${{ matrix.runon == 'ubuntu-latest' }}
        run: |
          sudo apt-get install --assume-yes --no-install-recommends \
          libxinerama-dev libxcursor-dev libxfixes-dev  libxft-dev \
          libpango1.0-dev libpangocairo-1.0-0 libpangoxft-1.0-0 libdbus-1-dev
      - shell: bash
        run: |
          LM_BUILD_VERSION="${{ github.ref_name }}"
          echo "LM_BUILD_VERSION=$LM_BUILD_VERSION" >> $GITHUB_ENV
      - name: build release cli
        run: cargo build --release --bin lifeblood-manager-cli
      - name: build release ui
        run: cargo build --release --bin lifeblood-manager --features ui
      - run: ls -R
      - uses: actions/upload-artifact@master
        with:
          name: build_${{ matrix.runon }}
          path: |
            target/release/lifeblood-manager-cli.exe
            target/release/lifeblood-manager-cli
            target/release/lifeblood-manager.exe
            target/release/lifeblood-manager

  release:
    name: create release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/download-artifact@master
        with:
          path: artifacts

      - run: ls -R artifacts

      - name: Make Release
        uses: softprops/action-gh-release@v1
        # if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            artifacts/*/lifeblood-manager*

  notify:
    uses: ./.github/workflows/release-notify.yml
    secrets:
      TELEGRAM_INFO_BOT_ID: ${{ secrets.TELEGRAM_INFO_BOT_ID }}
      TELEGRAM_INFO_CHANNEL_ID: ${{ secrets.TELEGRAM_INFO_CHANNEL_ID }}
    with:
      message_prepend: "ðŸ¤– Lifeblood-Manager update ${{ github.ref_name }}!\n\n"
      message_body_command: "git tag -l --format='%(contents)' ${{ github.ref_name }}"
      message_append: "\n\nhttps://github.com/${{ github.repository}}/releases/tag/${{ github.ref_name }}\n\n#manager"

    needs: [ "release" ]
